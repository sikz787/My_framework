{"name": "test_update_booking1", "status": "broken", "statusDetails": {"message": "requests.exceptions.MissingSchema: Invalid URL 'other_url/booking_id': No scheme supplied. Perhaps you meant https://other_url/booking_id?", "trace": "self = <testcases.Integration_TC.test_no_token.Testall object at 0x000001D6805546D0>\n\n    @pytest.mark.positive\n    def test_update_booking1(self):\n        token = \"ee59b4fd4407733\"  # self.test_token\n        url = \"other_url\" + \"/\" + str(\"booking_id\")\n        booking_id = self.test_create_booking1()\n        auth = payload_auth()\n        headers = common_headers()\n        payload = payload_create()\n>       response = put_request(url=url, auth=auth, headers=common_headers(), payload=payload_create(),\n                               in_json=False)\n\ntestcases\\Integration_TC\\test_no_token.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc\\helpers\\api_requests_wrapper.py:29: in put_request\n    put_response = requests.put(url=url, auth=auth, headers=headers, data=json.dumps(payload))\nvenv\\Lib\\site-packages\\requests\\api.py:130: in put\n    return request(\"put\", url, data=data, **kwargs)\nvenv\\Lib\\site-packages\\requests\\api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\nvenv\\Lib\\site-packages\\requests\\sessions.py:575: in request\n    prep = self.prepare_request(req)\nvenv\\Lib\\site-packages\\requests\\sessions.py:486: in prepare_request\n    p.prepare(\nvenv\\Lib\\site-packages\\requests\\models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [PUT]>, url = 'other_url/booking_id', params = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'other_url/booking_id': No scheme supplied. Perhaps you meant https://other_url/booking_id?\n\nvenv\\Lib\\site-packages\\requests\\models.py:439: MissingSchema"}, "start": 1703960617081, "stop": 1703960617954, "uuid": "da54ed8d-ffc5-4949-a54c-0a5ed645bab5", "historyId": "91612b205aebb078e7102a232ffdf9ab", "testCaseId": "91612b205aebb078e7102a232ffdf9ab", "fullName": "testcases.Integration_TC.test_no_token.Testall#test_update_booking1", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "testcases.Integration_TC"}, {"name": "suite", "value": "test_no_token"}, {"name": "subSuite", "value": "Testall"}, {"name": "host", "value": "DESKTOP-AV1ITA6"}, {"name": "thread", "value": "15880-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.Integration_TC.test_no_token"}]}